// Code generated by "stringer -type TypeCode type.go"; DO NOT EDIT.

package node

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeUnspecified-0]
	_ = x[TypeArray-1]
	_ = x[TypeBool-2]
	_ = x[TypeBytes-3]
	_ = x[TypeDate-4]
	_ = x[TypeJSON-5]
	_ = x[TypeInt64-6]
	_ = x[TypeNumeric-7]
	_ = x[TypeFloat64-8]
	_ = x[TypeString-9]
	_ = x[TypeStruct-10]
	_ = x[TypeTimestamp-11]
}

const _TypeCode_name = "TypeUnspecifiedTypeArrayTypeBoolTypeBytesTypeDateTypeJSONTypeInt64TypeNumericTypeFloat64TypeStringTypeStructTypeTimestamp"

var _TypeCode_index = [...]uint8{0, 15, 24, 32, 41, 49, 57, 66, 77, 88, 98, 108, 121}

func (i TypeCode) String() string {
	if i < 0 || i >= TypeCode(len(_TypeCode_index)-1) {
		return "TypeCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TypeCode_name[_TypeCode_index[i]:_TypeCode_index[i+1]]
}
