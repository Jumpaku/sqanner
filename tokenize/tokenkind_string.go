// Code generated by "stringer -type TokenKind token.go"; DO NOT EDIT.

package tokenize

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenUnspecified-0]
	_ = x[TokenEOF-1]
	_ = x[TokenSpace-2]
	_ = x[TokenComment-3]
	_ = x[TokenIdentifier-4]
	_ = x[TokenIdentifierQuoted-5]
	_ = x[TokenLiteralQuoted-6]
	_ = x[TokenLiteralInteger-7]
	_ = x[TokenLiteralFloat-8]
	_ = x[TokenKeyword-9]
	_ = x[TokenSpecialChar-10]
}

const _TokenKind_name = "TokenUnspecifiedTokenEOFTokenSpaceTokenCommentTokenIdentifierTokenIdentifierQuotedTokenLiteralQuotedTokenLiteralIntegerTokenLiteralFloatTokenKeywordTokenSpecialChar"

var _TokenKind_index = [...]uint8{0, 16, 24, 34, 46, 61, 82, 100, 119, 136, 148, 164}

func (i TokenKind) String() string {
	if i < 0 || i >= TokenKind(len(_TokenKind_index)-1) {
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenKind_name[_TokenKind_index[i]:_TokenKind_index[i+1]]
}
